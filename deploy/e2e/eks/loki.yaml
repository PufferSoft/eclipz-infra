---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki
  namespace: kube-system
  labels:
    app: loki
    group: grafana
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: kube-system
  labels:
    app: loki
    group: grafana
spec:
  type: NodePort
  ports:
    - port: 3100
      targetPort: 3100
      protocol: TCP
  selector:
    app: loki
    group: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: kube-system
  labels:
    app: loki
    group: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
      group: grafana
  template:
    metadata:
      labels:
        app: loki
        group: grafana
    spec:
      serviceAccountName: loki
      containers:
        - name: loki
          image: grafana/loki:2.3.0
          imagePullPolicy: Always
          args: ['-config.file=/etc/loki/loki-config.yaml']
          resources:
            requests:
              memory: "64Mi"
              cpu: "10m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
          - name: loki-config
            mountPath: /etc/loki/
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: kube-system
data:
  loki-config.yaml: |-
    auth_enabled: false
    server:
      http_listen_port: 3100
    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          store: inmemory
          replication_factor: 1
    schema_config:
      configs:
      - from: 0
        store: boltdb
        object_store: filesystem
        schema: v9
        index:
          prefix: index_
          period: 168h
    storage_config:
      boltdb:
        directory: /tmp/loki/index
      filesystem:
        directory: /tmp/loki/chunks
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: kube-system
  labels:
    app.kubernetes.io/name: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
  serviceName: loki-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
      annotations:
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
    spec:
      containers:
      - args:
        - -config.file=/etc/loki/loki.yaml
        image: grafana/loki:v0.2.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: http-metrics
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: loki
        ports:
        - containerPort: 3100
          name: http-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: http-metrics
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/loki
          name: config
        - mountPath: /data
          name: storage
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      volumes:
      - name: config
        secret:
          defaultMode: 420
          secretName: loki
      - emptyDir: {}
        name: storage
